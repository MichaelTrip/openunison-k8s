name: Build OpenUnison

on:
  push:
    branches:
      - 'main'
permissions:
  id-token: write
  packages: write

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11

    - name: Install Cosign
      uses: sigstore/cosign-installer@main
  
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - uses: actions/checkout@v1


    - name: generate tag
      run: |-
        export PROJ_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        echo "Project Version: $PROJ_VERSION"
        echo "TAG=$PROJ_VERSION-$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV
        echo "SHORT_TAG=$PROJ_VERSION" >> $GITHUB_ENV

    - name: Login to container Registry
      uses: docker/login-action@v2
      with:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io

    - name: downcase REPO
      run: |
        echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

    



    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: deploy with jib
      
      run: mvn compile jib:dockerBuild --file pom.xml -Djib.httpTimeout=600000 -Dimage=local/openunison-k8s

    - name: tag and push
      run: |
        docker tag local/openunison-k8s ghcr.io/${{ env.REPO }}:${{ env.TAG }}
        docker push ghcr.io/${{ env.REPO }}:${{ env.TAG }}

        docker tag local/openunison-k8s ghcr.io/${{ env.REPO }}:${{ env.SHORT_TAG }}
        docker push ghcr.io/${{ env.REPO }}:${{ env.SHORT_TAG }}

        docker tag local/openunison-k8s ghcr.io/${{ env.REPO }}:latest
        docker push ghcr.io/${{ env.REPO }}:latest
